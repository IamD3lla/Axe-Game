//Libraries that are already built into c++ are included with <>
//External libraries are included using ""
//External libraries also need to be included .h to the statement because it contais the header files
#include "raylib.h"

int main() {

    //Window dimensions
    int width = 800, 
        height = 450;

    //Circle Values
    int circleCenterX = 200, 
        circleCenterY = 200,
        circleRadius = 25,
        //Checks if the border of the circle is touching the border of the window, 
        //independent by the size of the window
        circleColisionRight = width - circleRadius,
        circleColisionLeft = circleRadius;

    //Rectangle values
    int rectX = 400, 
        rectY = 0,
        rectWidth = 50,
        rectHeight = 50;

    //raylib function that initializes a Window
    //takes 3 parameters, width = int, height = int and title = string
    InitWindow(width, height, "Axe Game");

    //Raylib function that sets a number for times the window update each second
    SetTargetFPS(60);
    //WindowShouldClose is a raylib function that returns a boolean value, if the "x" button on the window
    //is pressed, it returns true, otherwise it returns false
    while(WindowShouldClose() == false) {
        
        //Begin/EndDrawing are raylib functions that sets the area where the content will be drawed
        BeginDrawing();
        //ClearBackground is a raylib function that clears the background and takes 
        //one parameter for the color
        ClearBackground(WHITE);
        //DrawCircle is a raylib function that draws a circle and takes 4 parameters
        //DrawCircle(int centerx, int centery, int radius,raylib color )
        DrawCircle(circleCenterX, circleCenterY, circleRadius, BLUE);
        //DrawRectangle is a raylib function that draws a rectangle in the screen with 5 parameters
        //The position is generated by the top left corner of the rectangle
        DrawRectangle(rectX, rectY, rectWidth, rectHeight, RED);

        //Move the axe(rectangle)

        rectY += 10;

        //IsKeyDown(KEY) is a raylib function that verifies if the specified Key is Down
        if(IsKeyDown(KEY_D) && circleCenterX <= circleColisionRight) {
            circleCenterX += 10;
        }else if(IsKeyDown(KEY_A) && circleCenterX >= circleColisionLeft){
            circleCenterX -= 10;
        }

        EndDrawing();

    }

}